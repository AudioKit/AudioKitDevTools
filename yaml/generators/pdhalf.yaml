swift-directory: "Generators/Oscillators/"

sp-module: pdhalf

node: AKPhaseDistortionOscillator

akalias: phaseDistortionOscillator

four-letter-code: pdho

summary: phase distortion oscillator

one-word-description: oscillator

description: |
  Casio-style phase distortion with "pivot point" on the X axis
  This module is designed to emulate the classic phase distortion synthesis technique.
  From the mid 90's. The technique reads the first and second halves of the ftbl
  at different rates in order to warp the waveform. For example, pdhalf can
  smoothly transition a sinewave into something approximating a sawtooth wave.


parameters:

tables:
- ftbl: {
  ak-variable: waveform,
  comment: "Shape of the table to oscillate.",
  default: sine
}

parameters:
- freq: {
	ak-variable: frequency,
	comment: "Frequency in cycles per second",
    au-name: "Frequency (Hz)",
    au-unit: Hertz,
    default: 440,
    minimum: 0,
    maximum: "20_000"
}

- amp: {
    ak-variable: amplitude,
    comment: "Output Amplitude.",
    au-name: "Amplitude",
    au-unit: Generic,
    default: 1,
    minimum: 0,
    maximum: 10
}

- amount: {
  ak-variable: phaseDistortion,
  comment: "Amount of distortion, within the range [-1, 1]. 0 is no distortion.",
  au-name: "Amount of distortion, within the range [-1, 1]. 0 is no distortion.",
  au-unit: Generic,
  default: 0,
  minimum: -1,
  maximum: 1
}

- detuneOffset: {
    ak-variable: detuningOffset,
    comment: "Frequency offset in Hz.",
    au-name: "Frequency offset (Hz)",
    au-unit: Hertz,
    default: 0,
    minimum: "-1_000",
    maximum: "1_000"
}

- detuneScale: {
    ak-variable: detuningMultiplier,
    comment: "Frequency detuning multiplier",
    au-name: "Frequency detuning multiplier",
    au-unit: Generic,
    default: 1,
    minimum: 0.9,
    maximum: 1.11
}

