<%= header_partial %>
/// <%= description %>
///
public class <%= node %>: AKNode, AKToggleable, AKComponent<% if parameters.count > 0 -%>, AKAutomatable<% end -%> {

    public static let ComponentDescription = AudioComponentDescription(generator: "<%= four_letter_code %>")

    public typealias AKAudioUnitType = InternalAU

    public private(set) var internalAU: AKAudioUnitType?

<% if parameters.count > 0 -%>
    public private(set) var parameterAutomation: AKParameterAutomation?

<% end -%>
    // MARK: - Parameters

<% tables.each do |table| -%>
<% table.each do |sp_var, data| -%>
    fileprivate var <%= data["ak-variable"] %>: AKTable?

<% end -%>
<% end -%>
<%= parameters_partial -%>
    // MARK: - Audio Unit

    public class InternalAU: AKAudioUnitBase {

        public override func getParameterDefs() -> [AKNodeParameterDef] {
            return [<% parameters.each_with_index do |sp_parameter, i| -%>
<% sp_parameter.each do  |sp_var, data| -%><%= node %>.<%= data["ak-variable"] %>Def<%= ",\n                    " if i < parameters.count - 1 %><% end %><% end %>]
        }

        public override func createDSP() -> AKDSPRef {
            return create<%= node[2..-1] %>DSP()
        }
    }

    // MARK: - Initialization

    /// Initialize this <%= one_word_desc %> node
    ///
    /// - Parameters:
<% tables.each do |table| -%>
<% table.each do |sp_var, data| -%>
    ///   - <%= data["ak-variable"] %>: The waveform of oscillation
<% end -%>
<% end -%>
<% (parameters + constants).each do |sp_parameter| -%>
<% sp_parameter.each do  |sp_var, data| -%>
    ///   - <%= data["ak-variable"] %>: <%= data["comment"] %>
<% end -%>
<% end -%>
    ///
    public init(
<% tables.each do |table| -%>
<% table.each do |sp_var, data| -%>
        <%= data["ak-variable"] %>: AKTable,
<% end -%>
<% end -%>
<% (parameters + constants).each_with_index do |sp_parameter, i| -%>
<% sp_parameter.each do  |sp_var, data| -%>
        <%= data["ak-variable"] %>: AUValue = <%= data["default"] %><%= ",\n" if i < (parameters + constants).count - 1 %><% end %><% end %>
    ) {
<%= audio_unit_setup_partial %>
    }
}
