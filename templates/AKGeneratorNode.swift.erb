<%= header_partial %>

/// <%= description %>
///
<% if inputs.count > 0 -%>
/// - parameter input: Input node to process
<% end -%>
<% (parameters + constants).each do |sp_parameter| -%>
<% sp_parameter.each do  |sp_var, data| -%>
/// - parameter <%= data["ak-variable"] %>: <%= data["comment"] %>
<% end -%>
<% end -%>
///
public class <%= node %>: AKNode, AKToggleable, AKComponent {
    public typealias AKAudioUnitType = <%= node %>AudioUnit
    /// Four letter unique description of the node
    public static let ComponentDescription = AudioComponentDescription(effect: "<%= four_letter_code %>")

    // MARK: - Properties
    private var internalAU: AKAudioUnitType?
    private var token: AUParameterObserverToken?

<% (parameters + constants).each do |sp_parameter| -%>
<% sp_parameter.each do  |sp_var, data| -%>
    fileprivate var <%= data["ak-variable"] %>Parameter: AUParameter?
<% end -%>
<% end -%>

<% tables.each do |table| -%>
<% table.each do |sp_var, data| -%>
    private var <%= data["ak-variable"] %>: AKTable?
<% end -%>
<% end -%>

<%= parameters_partial -%>
    /// Tells whether the node is processing (ie. started, playing, or active)
    open dynamic var isStarted: Bool {
        return internalAU?.isPlaying() ?? false
    }

    // MARK: - Initialization

    /// Initialize this <%= one_word_desc %> node
    ///
<% if inputs.count > 0 -%>
    /// - parameter input: Input node to process
<% end -%>
<% (parameters + constants).each do |sp_parameter| -%>
<% sp_parameter.each do  |sp_var, data| -%>
    /// - parameter <%= data["ak-variable"] %>: <%= data["comment"] %>
<% end -%>
<% end -%>
    ///
    public init(
<% tables.each do |table| -%>
<% table.each do |sp_var, data| -%>
        <%= data["ak-variable"] %>: AKTable = AKTable(.Sine),
<% end -%>
<% end -%>
<% (parameters + constants).each_with_index do |sp_parameter, i| -%>
<% sp_parameter.each do  |sp_var, data| -%>
        <%= data["ak-variable"] %>: Double = <%= data["default"] %><%= ",\n" if i < (parameters + constants).count - 1 %><% end %><% end %>) {


<% (tables+parameters).each do |sp_parameter| -%>
<% sp_parameter.each do  |sp_var, data| -%>
        self.<%= data["ak-variable"] %> = <%= data["ak-variable"] %>
<% end -%>
<% end -%>

<%= audio_unit_setup_partial %>

<%= parameter_observation_partial %>
<% parameters.each do |sp_parameter| -%>
<% sp_parameter.each do  |sp_var, data| -%>
        internalAU?.<%= data["ak-variable"] %> = Float(<%= data["ak-variable"] %>)
<% end -%>
<% end -%>
    }

    /// Function to start, play, or activate the node, all do the same thing
    open func start() {
        internalAU?.start()
    }

    /// Function to stop or bypass the node, both are equivalent
    open func stop() {
        internalAU?.stop()
    }
}
