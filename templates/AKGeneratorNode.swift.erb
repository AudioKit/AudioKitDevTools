// Copyright AudioKit. All Rights Reserved. Revision History at http://github.com/AudioKit/AudioKit/
// This file was auto-autogenerated by scripts and templates at http://github.com/AudioKit/AudioKitDevTools/

import AVFoundation
import CAudioKit

/// <%= description %>
public class <%= node %>: AKNode, AKComponent, AKToggleable {

    public static let ComponentDescription = AudioComponentDescription(generator: "<%= four_letter_code %>")

    public typealias AKAudioUnitType = InternalAU

    public private(set) var internalAU: AKAudioUnitType?

    // MARK: - Parameters

<% tables.each do |table| -%>
<% table.each do |sp_var, data| -%>
    fileprivate var <%= data["ak-variable"] %>: AKTable?

<% end -%>
<% end -%>
<% unless tableArray.nil? -%>
    fileprivate var <%= tableArray %> = [AKTable]()

<% end -%>
<%= parameters_partial -%>
<%= internal_au_partial %>

    // MARK: - Initialization

    /// Initialize this <%= one_word_desc %> node
    ///
    /// - Parameters:
<% unless tableArray.nil? -%>
    ///   - <%= tableArray %>: An array of exactly four waveforms
<% end -%>
<% tables.each do |table| -%>
<% table.each do |sp_var, data| -%>
    ///   - <%= data["ak-variable"] %>: The waveform of oscillation
<% end -%>
<% end -%>
<% (parameters + constants).each do |sp_parameter| -%>
<% sp_parameter.each do  |sp_var, data| -%>
    ///   - <%= data["ak-variable"] %>: <%= data["comment"] %>
<% end -%>
<% end -%>
    ///
    public init(
<% tables.each do |table| -%>
<% table.each do |sp_var, data| -%>
        <%= data["ak-variable"] %>: AKTable = AKTable(.sine),
<% end -%>
<% end -%>
<% unless tableArray.nil? -%>
        <%= tableArray %>: [AKTable] = [AKTable(.triangle), AKTable(.square), AKTable(.sine), AKTable(.sawtooth)],
<% end -%>
<% (parameters + constants).each_with_index do |sp_parameter, i| -%>
<% sp_parameter.each do  |sp_var, data| -%>
        <%= data["ak-variable"] %>: AUValue = <%= data["default"] %><%= ",\n" if i < (parameters + constants).count - 1 %><% end %><% end %>
    ) {
<%= audio_unit_setup_partial %>
    }
<% unless control_block.nil? -%>

    // MARK: - Control

<%= control_block %>
<% end -%>
}
