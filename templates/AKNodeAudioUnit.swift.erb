// Copyright AudioKit. All Rights Reserved. Revision History at http://github.com/AudioKit/AudioKit/

import AVFoundation

public class <%= node %>AudioUnit: AKAudioUnitBase {

<% parameters.each do |sp_parameter| -%>
<% sp_parameter.each do  |sp_var, data| -%>
    let <%= data["ak-variable"] %> = AUParameter(
        identifier: "<%= data["ak-variable"] %>",
        name: "<%= data["au-name"] %>",
        address: <%= node %>Parameter.<%= data["ak-variable"] %>.rawValue,
        range: <%= node %>.<%= data["ak-variable"] %>Range,
        unit: .<%= data["au-unit"].downcase %>,
        flags: .default)
<% end %>
<% end -%>
    public override func createDSP() -> AKDSPRef {
        return create<%= node[2..-1] %>DSP()
    }

    public override init(componentDescription: AudioComponentDescription,
                         options: AudioComponentInstantiationOptions = []) throws {
        try super.init(componentDescription: componentDescription, options: options)

        parameterTree = AUParameterTree.createTree(withChildren: [<% parameters.each_with_index do |sp_parameter, i| -%>
<% sp_parameter.each do |sp_var, data| -%>
<%= data["ak-variable"] %><%= ", " if i < parameters.count - 1 -%>
<% end -%>
<% end -%>])
    }
}
